from datetime import datetime

class MessageTemplates:
    @staticmethod
    def support_request(request_data: dict, user_info: dict) -> str:
        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")

        return f"""
üÜï <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b>
   ‚Ä¢ ID: {user_info.get('id', 'N/A')}
   ‚Ä¢ –ò–º—è: {user_info.get('username', 'N/A')}
   ‚Ä¢ Email: {user_info.get('email', 'N/A')}

üìã <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ:</b>
   ‚Ä¢ –¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã: {request_data.get('problem_type', 'N/A')}
   ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {request_data.get('title', 'N/A')}
   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {request_data.get('description', 'N/A')}

‚è∞ <b>–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:</b> {timestamp}
        """.strip()

    @staticmethod
    def beat_moderation_request(beat_data: dict, user_info: dict, pricings=None) -> str:
        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")

        pricing_text = ""
        if pricings:
            pricing_lines = []
            for pricing in pricings:
                tariff_name = pricing.tariff.display_name if pricing.tariff else pricing.tariff_name
                pricing_lines.append(f"   ‚Ä¢ {tariff_name}: {pricing.price} ‚ÇΩ")
            if pricing_lines:
                pricing_text = "\nüí∞ <b>–¶–µ–Ω—ã:</b>\n" + "\n".join(pricing_lines)
            else:
                pricing_text = "\nüí∞ <b>–¶–µ–Ω—ã:</b> –ë–µ—Å–ø–ª–∞—Ç–Ω–æ"
        else:
            pricing_text = "\nüí∞ <b>–¶–µ–Ω—ã:</b> –ù–µ —É–∫–∞–∑–∞–Ω—ã"

        return f"""
üéµ <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –±–∏—Ç–∞</b>

üë§ <b>–ê–≤—Ç–æ—Ä:</b>
   ‚Ä¢ ID: {user_info.get('id', 'N/A')}
   ‚Ä¢ –ò–º—è: {user_info.get('username', 'N/A')}
   ‚Ä¢ Email: {user_info.get('email', 'N/A')}

üéº <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏—Ç–µ:</b>
   ‚Ä¢ ID –±–∏—Ç–∞: {beat_data.get('id', 'N/A')}
   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {beat_data.get('name', 'N/A')}
   ‚Ä¢ –ñ–∞–Ω—Ä: {beat_data.get('genre', 'N/A')}
   ‚Ä¢ –¢–µ–º–ø: {beat_data.get('tempo', 'N/A')} BPM
   ‚Ä¢ –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {beat_data.get('key', 'N/A')}
   ‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è: {beat_data.get('promotion_status', 'N/A')}{pricing_text}

‚è∞ <b>–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:</b> {timestamp}

<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –ø–æ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.</i>
        """.strip()

    @staticmethod
    def welcome_message() -> str:
        return ""
